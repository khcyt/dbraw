const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="kh_server";const mf="common_utils_ext_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);import{isValid,isPaaS}from"/contrib/jsm/kh_earlybird.js";let print_level=undefined;import{Logger}from"/contrib/jsm/kh_log.js";const kh_log=new Logger(print_level,()=>name);const name=MF`${mf}`;import*as cookie from"cookie";import*as cookieParser from"cookie-parser";export function get_session_id({session_cookie_name,session_secret},req,force_cookie=false){if(!isValid(req)){const is_paas=isPaaS()||true;return!is_paas?(req,force_cookie=false)=>!force_cookie&&req.session?.id||cookieParser.signedCookie(cookie.parse(req.headers.cookie)[session_cookie_name],session_secret):(req,force_cookie=false)=>{try{return!force_cookie&&req.session?.id||cookieParser.signedCookie(cookie.parse(req.headers.cookie)[session_cookie_name],session_secret)}catch(error){return"-1"}}}else return get_session_id(arguments[0])(req,force_cookie)}kh_global.LoadedScripts.get(mf).resolve(ms);