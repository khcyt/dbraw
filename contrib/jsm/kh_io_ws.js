const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="kh_io";const mf="kh_io_ws_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);let jsm_prefix;let common_prefix;let npm_prefix;if("undefined"!==typeof process){jsm_prefix=`file:///${kh_global.kh.pathes.get("own-module")}`;common_prefix=`file:///${kh_global.kh.pathes.get("common")}`;npm_prefix=`file:///${kh_global.kh.pathes.get("node-module")}`}else{jsm_prefix=nodeFN2ZK(`/contrib/jsm`)}const kh_js={...await import(`${jsm_prefix}/kh_earlybird${VERSION}.js`)};Object.assign(kh_js,await import(`${jsm_prefix}/kh_functions${VERSION}.js`));Object.assign(kh_js,await import(`${jsm_prefix}/kh_classes${VERSION}.js`));const name=MF`${mf}`;const print_level=undefined;const{Logger}=await import(`${jsm_prefix}/kh_log${VERSION}.js`);const kh_log=new Logger(print_level,(()=>name));const{HTTPError}={...await import(`${jsm_prefix}/kh_io${VERSION}.js`)};const{vjs}="undefined"==typeof process&&await import(`${jsm_prefix}/kh_vanilla${VERSION}.js`);if("undefined"!==typeof process){kh_global.WebSocket??=(await import(`${npm_prefix}/ws/index.js`)).default.WebSocket}else{}export const enumSocket=Object.freeze({mt_socket_status_:new kh_js.EnumValue("socket_status",1<<0>>>0),mt_app_status_:new kh_js.EnumValue("app_status",1<<1>>>0),mt_broadcast_:new kh_js.EnumValue("broadcast",1<<2>>>0),mt_app_settings_:new kh_js.EnumValue("app_settings",1<<3>>>0),mt_watchdog_:new kh_js.EnumValue("watchdog",1<<4>>>0),mt_send_back_:new kh_js.EnumValue("send_back",1<<5>>>0),mt_next_val_:6,attr_request_id_:new kh_js.EnumValue("request_id",1<<16>>>0),attr_msg_type_:new kh_js.EnumValue("msg_"+kh_js.WindowArgs.type,1<<17>>>0),attr_msg_sub_type_:new kh_js.EnumValue("msg_sub_"+kh_js.WindowArgs.type,1<<18>>>0),attr_value_:new kh_js.EnumValue(kh_js.WindowArgs.value,1<<19>>>0),attr_result_:new kh_js.EnumValue("attr_result_",1<<20>>>0),attr_private_:new kh_js.EnumValue("attr_private_",1<<21>>>0),attr_next_val_:22,valueOf:(obj,ema)=>kh_js.EnumValue.valueOf(obj,ema,enumSocket)});export class WebSocket extends kh_global.WebSocket{constructor(url,protocols,options){super(url,kh_js.isObject(protocols)?undefined:protocols);if(kh_js.isObject(protocols)){options=protocols;protocols=undefined}this.options_=options||{};this.options_.heartbeat_intervall||=3e4;this.options_.throw_send_on_close??=true;if(kh_js.isValid(this.options_.binaryType))this.binaryType=this.options_.binaryType;this.result_promises_=new Map;const enumSocket=this.enumSocket;const othis=this;if(kh_js.isBrowser()){this.addEventListener("open",(()=>{othis.addEventListener("ping",(e=>"function"===typeof othis.onping?othis.onping(e.data||e):42));othis.addEventListener("pong",(e=>"function"===typeof othis.onpong?othis.onpong(e.data||e):42));othis.binaryType=this.options_.binaryType||"blob";if(othis.options.pong_sender)othis.heartbeat();if(kh_js.isObject(othis.options.msg?.open)){kh_js.defer(500).then((()=>othis.send_text(othis.options.msg.open)))}if(kh_js.isBrowser()){vjs?.on("beforeunload",(()=>{if(othis.isOpen()){if(kh_js.isValid(othis.options.msg?.unload)){if(Array.isArray(this.options.msg.unload)){othis.options.msg.unload=othis.options.msg.unload.map((msg=>"function"==typeof msg?msg():msg)).filter((msg=>kh_js.isValid(msg)))}othis.send_text(this.options.msg.unload)}othis.close()}}),window)}}))}if(kh_js.isBrowser()){this.addEventListener("message",(e=>{if("ping"===e.data||"pong"===e.data){return othis.dispatchEvent(new MessageEvent(e.data,{data:e}))}if("pp"===e.data)return;kh_js.defer(0).then((()=>{let msgs=JSON.parse(e.data);if(!Array.isArray(msgs))msgs=[msgs];msgs.forEach((msg=>{if(kh_js.isString(msg)){if("ping"===msg||"pong"===msg){return othis.dispatchEvent(new MessageEvent(msg))}if("pp"===msg)return}else{const msg_type=enumSocket.valueOf(msg,enumSocket.attr_msg_type_);const msg_sub_type=enumSocket.valueOf(msg,enumSocket.attr_msg_sub_type_);kh_log.trace?.(T9`ws message_data => ${msg_type} - ${msg_sub_type} - ${msg[enumSocket.attr_value_]}`);switch(msg_type){case enumSocket.mt_send_back_:{msg=msg[enumSocket.attr_value_];othis.send(kh_js.isString(msg)&&msg||JSON.stringify(msg));break}default:othis.resolve_request(msg)}}}))})).catch((error=>{kh_log.info?.(T9`unexpected error or ws message with unknown data format / ${e.data} / ${error}`)}))}))}this.addEventListener("close",(e=>{kh_log.debug?.(T9`web socket ${othis.shortName(true)} is closed - ${e.code||"??"} - ${e.reason||"???"} - clean= ${e.wasClean?"true":"false"}`);othis.clearTimeout()}));this.addEventListener("error",(e=>{kh_log.error?.(T9`web socket ${othis.shortName(true)} has error - ${e}`);othis.clearTimeout()}));this.pingTimeout_=undefined}resolve_request(msg){this.result_promises_.get(msg[this.enumSocket.attr_request_id_])?.resolve(msg)}reject_request(msg,error){this.result_promises_.get(msg[this.enumSocket.attr_request_id_])?.reject(error??msg)}isOpen(){return WebSocket.OPEN==this.readyState}isReady(){return WebSocket.CONNECTING==this.readyState||WebSocket.OPEN==this.readyState}isClosed(){return!this.isReady()}room(){const url_split=this.url.split("/");return(kh_js.isBrowser()?url_split[4]:url_split[2])||""}shortName(force_with_room=false){const url_split=this.url.split("/");return((kh_js.isBrowser()?url_split[3]:url_split[1])||"")+(force_with_room||this.options_.with_room?`/${this.room()}`:"")||this.url}send_text(text,callback){if(kh_js.isEmpty(text))return;text=kh_js.isString(text)?text:JSON.stringify(text);if(this.isClosed()&&true==this.options_.throw_send_on_close){const error=new(HTTPError(kh_js.Error))({status:406,msg:"socket not open"});if("function"==typeof callback&&kh_js.isNode())callback(error);else throw error}super.send(text,callback)}send_binary(data,callback){if(!kh_js.isValid(data))return;if(this.isClosed()&&true==this.options_.throw_send_on_close){const error=new(HTTPError(kh_js.Error))({status:406,msg:"socket not open"});if(kh_js.isValid(callback)&&kh_js.isNode())callback(error);else throw error}if(kh_js.isNode()){super.send(data,{binary:true},callback)}else super.send(data)}send_request(msg,timeout=3e4){msg[this.enumSocket.attr_request_id_]??=WebSocketUtil.nextRequestId();const promise=new kh_js.Deferred(timeout,true,new kh_js.Error({msg:["timeout",this.shortName(true)],data:msg}));this.result_promises_.set(msg[this.enumSocket.attr_request_id_],promise);this.send_text(msg);const othis=this;return promise.finally((()=>othis.result_promises_.delete(msg[this.enumSocket.attr_request_id_])))}heartbeat(){this.clearTimeout();const othis=this;this.pingTimeout_=kh_global.setTimeout((()=>othis.close()),(this.heartbeat.intervall||this.options_.heartbeat_intervall)+1e3)}clearTimeout(){if(kh_js.isValid(this.pingTimeout_)&&-1!=this.pingTimeout_){kh_global.clearTimeout(this.pingTimeout_);this.pingTimeout=-1}}set heartbeatIntervall(intv){this.options.heartbeat_intervall=intv||3e4}ping(callback){if(this.options.ping_sender)this.isAlive_=false;else kh_log.warn?.("unexpected ping-request");this.send_text("ping",callback)}pong(callback){if(this.options.ping_sender)kh_log.warn?.("unexpected pong-request");this.send_text("pong",callback)}onpong(){if(!this.options.ping_sender)kh_log.warn?.("unexpected pong receive");else this.isAlive_=true}onping(){if(this.options.ping_sender)kh_log.warn?.("unexpected ping receive");else{this.heartbeat();this.pong()}}get options(){return this.options_}get enumSocket(){return this.options?.enumSocket||cs.enumSocket}addUnloadMsg(msg,append=true){this.options.msg??={};this.options.msg.unload??=[];if(!Array.isArray(this.options.msg.unload))this.options.msg.unload=[this.options.msg.unload];if(append)this.options.msg.unload.push(msg);else this.options.msg.unload.splice(0,0,msg)}suspend(msg){if(kh_js.isValid(msg)||kh_js.isObject(this.options.msg?.suspend))this.send_text(msg||this.options.msg.suspend);this.clearTimeout()}resume(msg){if(kh_js.isValid(msg)||kh_js.isObject(this.options.msg?.resume))this.send_text(msg||this.options.msg.resume);this.heartbeat()}static create_and_open(url,protocols,options){return new Promise(((resolve,reject)=>{const ws=new WebSocket(url,protocols,options);let open_f,error_f;ws.addEventListener("open",open_f=()=>{kh_global.T9=kh_global.T9||(kh_log||kh_global.kh_log).processObjects;kh_log.trace?.(T9`web socket ${ws.shortName(true)} is open, promise will fulfilled`);open_f&&ws.removeEventListener("open",open_f);error_f&&ws.removeEventListener("error",error_f);resolve({socket:ws,config:ws.options})});ws.addEventListener("error",error_f=error=>{kh_log.error?.(T9`web socket ${ws.shortName(true)} is in error state => ${error}`);open_f&&ws.removeEventListener("open",open_f);error_f&&ws.removeEventListener("error",error_f);reject(error)})}))}static create_and_connect(app_context,{room="/",options={},protocols,pong_sender=true,msg_handler}={}){return new Promise((function(resolve,reject){const ws_url_obj=WebSocketUtil.name_builder_simple({room,id_as_path:true});if(!kh_js.isValid(msg_handler))kh_log.warn?.(T9`msg-handler parameter is missing. If you really don't want to set the parameter, set it to false.`);const enumSocket=app_context.enumSocket||options.enumSocket||cs.enumSocket;return WebSocket.create_and_open(ws_url_obj.url,protocols,{msg:{open:{[enumSocket.attr_msg_type_]:enumSocket.mt_socket_status_,[enumSocket.attr_value_]:"accepted"},unload:{[enumSocket.attr_msg_type_]:enumSocket.mt_socket_status_,[enumSocket.attr_value_]:"closed"},suspend:{[enumSocket.attr_msg_type_]:enumSocket.mt_socket_status_,[enumSocket.attr_msg_sub_type_]:enumSocket.mt_watchdog_,[enumSocket.attr_value_]:"suspend"},resume:{[enumSocket.attr_msg_type_]:enumSocket.mt_socket_status_,[enumSocket.attr_msg_sub_type_]:enumSocket.mt_watchdog_,[enumSocket.attr_value_]:"resume"}},pong_sender,...options}).then((async({socket,config})=>{socket["uuid"]=ws_url_obj.room;socket["#ws_url_obj"]=ws_url_obj;app_context["kh-ws"]=socket;"function"===typeof msg_handler&&socket.addEventListener("message",msg_handler.bind(app_context,socket));return resolve({socket,config})})).catch((error=>reject(error)))}))}}export class WebSocketUtil{static name_builder({endpoint,secure=true,ep_prefix,room_prefix="$ws-",room,id=`${Math.random()*1e4+1>>>0}`.padStart(5,"0")}={}){if(kh_js.isEmpty(endpoint))throw new Error({msg:["param-invalid","endpoint","for build websocket name"]});if(kh_js.isEmpty(ep_prefix))throw new Error({msg:["param-invalid","ep_prefix","for build websocket name"]});if(!ep_prefix.startsWith("/"))ep_prefix="/"+ep_prefix;if(!ep_prefix.endsWith("/"))ep_prefix=ep_prefix+"/";if(!kh_js.isEmpty(room_prefix)&&!room_prefix.endsWith("-"))room_prefix=room_prefix+"-";return"ws"+(false===secure||kh_js.isiOS()?"":"s")+"://"+endpoint+ep_prefix+(room||room_prefix+("#"===id?.charAt(0)?id.substring(1):id))}static name_builder_simple({room="$ws-",id=`${Math.random()*1e4+1>>>0}`.padStart(5,"0"),use_pathname=true,use_id,id_as_path=false}={}){if(2<window.location.pathname.length&&-1!=room.indexOf(window.location.pathname.slice(1,-1)))use_pathname=false;let ws_url=`${window.location.origin??""}${use_pathname&&window.location.pathname||""}`.replace("http","ws");if(kh_js.isEmpty(ws_url))return undefined;if(!ws_url.endsWith("/"))ws_url+="/";const pos_qm=room.indexOf("?");const room_query=-1!=pos_qm?room.substring(pos_qm):"";if(-1!=pos_qm)room=room.substring(0,pos_qm);if(room.endsWith("/")){if(true!==use_id)use_id=false;room=room.slice(0,-1)}if("/"==room.charAt(0)){room=room.substring(1)}if(false!==use_id){if(!kh_js.isEmpty(room)&&!room.endsWith("-")&&true!=id_as_path)room=room+"-";room=`${room}${!kh_js.isEmpty(room)?true!==id_as_path?"-":"/":""}${id}`}if(!room.endsWith("/"))room+="/";return{url:`${ws_url}${room}${room_query??""}`,room,id,query:room_query}}}WebSocketUtil.nextRequestId??=function(){let request_id=kh_js.getRandomArbitrary(0,1<<28)>>>0;return function(){return++request_id}}();Object.assign(cs,{enumSocket});kh_global.LoadedScripts.get(mf).resolve(ms);