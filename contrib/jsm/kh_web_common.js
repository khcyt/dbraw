const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof kh_global.window&&"undefined"===typeof kh_global.process&&kh_global.self;const cf="kh_web";const mf="kh_web_common_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof kh_global.window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof kh_global.process?"node.js":"undefined"!==typeof kh_global.self?kh_global.self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);import{isString,isEmpty,isNode,isValid}from"/contrib/jsm/kh_earlybird.js";import{Error as khjs_Error}from"/contrib/jsm/kh_classes.js";const name=MF`${mf}`;const print_level=undefined;import{Logger}from"/contrib/jsm/kh_log.js";const kh_log=new Logger(print_level,()=>name);import{HTTPError}from"/contrib/jsm/kh_io.js";import{vjs}from"/contrib/jsm/kh_vanilla.js";export function unzip(storage,label_key,element=true){return!isString(label_key)?undefined:kh_global.kh.storage.kh_js.unzipProp(label_key,true,element||getMainWindow(storage))}export function unzipProp(storage,prop,element=true){return kh_global.kh.storage.kh_js.unzipProp(prop,false,element||getMainWindow(storage))}export function getMainWindow(storage){if(isNode()||!isValid(storage))return undefined;const key=`${storage.cf}-mainw`;if(!isValid(storage[key])){storage[key]=vjs(`#${unzip(storage,"id.main.win",true)}`,false)}return storage[key]}export function processTagged(storage,strings,...keys){if(isEmpty(strings)&&isEmpty(keys))return"";return keys.map((key,i)=>{let s=unzip(storage,key);return strings[i]+(!isEmpty(s)?s:key)}).join("")+strings[strings.length-1]}export function processTaggedComplex(storage,strings,...keys){if(isEmpty(strings)&&isEmpty(keys))return"";return unzipProp(storage,processTagged(storage,strings,...keys))}export class Error extends(HTTPError(khjs_Error)){constructor(...argz){super(...arguments)}}export function nonEmptyAttr(attr){if(isEmpty(attr))return"";return`[${attr}]:not([${attr}=""])`}export function emptyAttr(attr,combine=false){if(isEmpty(attr))return"";return`${combine?":is(":""}:not([${attr}]),[${attr}=""]${combine?")":""}`}kh_global.LoadedScripts.get(mf).resolve(ms);