const kh_global=Function("return globalThis;")()||Function("return this;")()||Function("return self;")();const as_module=undefined==this;const asWorker="undefined"===typeof window&&"undefined"===typeof process&&self;const cf="dbraw";const mf="dbraw_router_esm";kh_global.kh??={};kh_global.kh.context??="undefined"!==typeof window?kh_global.parent==kh_global?"window":"iframe":"undefined"!==typeof process?"node.js":"undefined"!==typeof self?self.name??"worker":"unknown";kh_global.kh.storage??={};const cs=kh_global.kh.storage[cf]??={cf,ms:new Set};const ms=kh_global.kh.storage[mf]??={mf,cs};cs.ms.add(ms);import*as fsPromises from"node:fs/promises";import*as path from"node:path";import{isEmpty,isString,isDevelopement,isProductionLazy,currentFunctionName}from"/contrib/jsm/kh_earlybird.js";import{getTimestamp4FileName,deferF}from"/contrib/jsm/kh_functions.js";const print_level=undefined;import{Logger}from"/contrib/jsm/kh_log.js";const kh_log=new Logger(print_level,()=>name);import{JSONBIN}from"/common/jsonbinstore.mjs";import{Error}from"/~KHCyT@MOD/js/dbraw_types.mjs";const name=MF`${mf}`;kh_start_remove();export class Handling4EventFile{server_settings_;stdFileNameAuto;backup_test_id_;jsonbin_;constructor(server_context){this.server_settings_=server_context.server_settings;this.stdFileNameAuto=this.server_settings_.app_settings.local_fs?this.stdFileNameToFS.bind(this):this.stdFileNameToJS.bind(this);if(!this.server_settings_.app_settings.local_fs){let jsonbin_type=this.server_settings_.app_settings.jsonbin_type;if(isEmpty(jsonbin_type)||"session"==jsonbin_type)jsonbin_type=this.server_settings_.session_store;JSONBIN.create(jsonbin_type,{appid:this.server_settings_.app_settings?.id??this.server_settings_.app_name??this.server_settings_.session_cookie_name,autoTimeout:(this.server_settings_.app_settings?.session_timeout||this.server_settings_.session_timeout||36e5)>>>0}).then(jsbin=>{this.jsonbin_=jsbin;kh_log.trace?.(T9`base_url= ${this.jsonbin_.base_url()}`)})}this.backup_test_id_={}}stdFileName(fn_stem,year,with_ext=this.server_settings_.app_settings.local_fs){return`${fn_stem}${!isEmpty(year)?`-${year}`:""}${with_ext?".json":""}`}resolveToFS(fn,year){return path.resolve(`./data/${fn}`)}resolveToJS(fn,year){return`DBRAW/${!isEmpty(year)?`${year}/`:""}${fn}`}stdFileNameToFS(fn_stem="event-file",year,with_ext=true,resolved){const fn=this.stdFileName(fn_stem,year,with_ext);return resolved?this.resolveToFS(fn,year):fn}stdFileNameToJS(fn_stem="event-file",year,with_ext="dmy",resolved){const fn=this.stdFileName(fn_stem,year,false);return resolved?this.resolveToJS(fn,year):fn}resolveToAuto(fn,year){if(fn.startsWith("http")||fn.startsWith("DBRAW")||path.isAbsolute(fn))return fn;return this.server_settings_.app_settings.local_fs?this.resolveToFS(fn,year):this.resolveToJS(fn,year)}async readFile(filename,force_local_fs,get_json=true){return this.server_settings_.app_settings.local_fs||true==force_local_fs?fsPromises.readFile(filename,"utf8").then(data=>Promise.resolve(get_json?JSON.parse(data):data)):this.jsonbin_.op_get(filename)}async writeFile(filename,data,force_local_fs){return this.server_settings_.app_settings.local_fs||true==force_local_fs?fsPromises.writeFile(filename,!isString(data)?JSON.stringify(data):data,"utf8"):this.jsonbin_.op_set(filename,data)}createEventMap(prepareData){const o_this=this;let eventDataMap=new class _EventDataMap extends Map{async ensure(filename,year,new_data){filename=o_this.resolveToAuto(filename,year);if(!this.has(filename)){let data;try{data=await o_this.readFile(filename)}catch(err){if(isEmpty(new_data))throw err}if(isEmpty(new_data)){if(!isEmpty(data))new_data=data;else throw new Error("data-not-determined")}}if(!isEmpty(new_data)){new_data=isString(new_data)?JSON.parse(new_data):new_data;if(Function.isFunction(prepareData))new_data=prepareData(new_data);this.set(filename,new_data)}return this.get(filename)}};return eventDataMap}async saveData(year,filename,data,append_time){if(isEmpty(filename)||isEmpty(data))return Promise.reject(new Error("invalid-argument","filename || data"));let save2local_fs=this.server_settings_.app_settings.local_fs;if(append_time){const tp=getTimestamp4FileName();if(save2local_fs){let pathObj=path.parse(filename);pathObj.name=pathObj.name+"-"+tp;pathObj.base=null;filename=this.resolveToFS(path.format(pathObj))}else{let pos_last_delim=filename.lastIndexOf("/");++pos_last_delim;filename=filename.substring(pos_last_delim);if(-1!=JSON.stringify(data).indexOf("LS AT")){filename=this.resolveToFS(`${filename}-${tp}.json`);save2local_fs=true}else{filename=this.resolveToAuto(`backup/${filename}-${tp}`,year)}}}else filename=this.resolveToAuto(filename,year);this.backup_test_id_[year.toString()]??=deferF(this.backup_test_f.bind(this,year,undefined,save2local_fs),3e3,true);this.backup_test_id_[year.toString()]();return this.writeFile(filename,data,save2local_fs)}backup_test_f(year,limit=5,save2local_fs){this.backup_test_id_[year.toString()]=undefined;save2local_fs??=this.server_settings_.app_settings.local_fs;if(!save2local_fs){const filename=this.resolveToJS("backup",year);this.readFile(filename,false).then(json=>{if(isString(json))json=JSON.parse(json);const keys=Object.keys(json);kh_log.debug?.(T9`backup repo contains ${keys.length} entries`);if(limit<keys.length){keys.sort();const keys2delete=keys.splice(0,keys.length-30);kh_log.debug?.(T9`keys to delete: ${keys2delete}`);keys2delete.forEach(key=>{delete json[key]});this.writeFile(filename,json,save2local_fs)}}).catch(error=>{kh_log.warn?.(T9`backup_test_f()=> either backup not exists yet or readError= ${error}`)})}}}export class Router{#server_context_;#h4EF_;constructor(server_context){this.#server_context_=server_context;this.#h4EF_=new Handling4EventFile(this.#server_context_)}async handle_get_mod(req,res,next){kh_log.debug?.(T9`handle_get_mod ${req.originalUrl}`);const question_mark=req.originalUrl.indexOf("?");const pos_end=-1!=question_mark?question_mark:req.originalUrl.length;const filename=`${process.cwd()}/${req.originalUrl.substring(req.originalUrl.indexOf("/",1)+1,pos_end)}`;kh_log.debug?.(`router:${this.#server_context_.get_method2(req)}) -> request for MOD file ${req.originalUrl}/ -> send ${filename}`);if(filename.endsWith("/")){const client_ip=this.#server_context_.get_client_ip(req)??"???";kh_log.warn?.(T9`illegal directory access from ${client_ip} |${req.originalUrl}|${this.#server_context_.sessionID(req)}|`);return res.sendStatus(403)}try{let data;try{data=await fsPromises.readFile(filename)}catch(error){if(isDevelopement){const cwd_dist=kh_global.kh.pathes.get("dist-app");if(!isEmpty(cwd_dist))data=await fsPromises.readFile(new URL(req.originalUrl.substring(req.originalUrl.indexOf("/",1)+1,pos_end),cwd_dist));else throw error}}let code=isString(data)?data:Buffer.isBuffer(data)?data.toString():data.toString();{const sr="kh_start_remove()",er="kh_end_remove()";while(true){let p1=code.indexOf(sr);if(-1==p1)break;let p2=code.indexOf(er,p1+sr.length);if(-1!=p2)p2=p2+er.length;code=code.substring(0,p1)+(-1!=p2?code.substring(p2+1):"")}}if(isProductionLazy){const sr="kh_production_start_remove()",er="kh_production_end_remove()";while(true){let p1=code.indexOf(sr);if(-1==p1)break;let p2=code.indexOf(er,p1+sr.length);if(-1!=p2)p2=p2+er.length;code=code.substring(0,p1)+(-1!=p2?code.substring(p2):"")}}res.contentType("application/javascript");return res.send(code)}catch(error){kh_log.error?.(T9`router:${this.#server_context_.get_method2(req)}) /${req.originalUrl}/ -> error= ${error}`);if("EISDIR"==error?.code)return res.sendStatus(403);res.status(error.status||404);return next(error)}}handle_get_teamlist(req,res,next){const list_marker=/\/~data\/(.*)$/.exec(req.originalUrl)?.[1];const filename=this.#h4EF_.stdFileNameAuto(list_marker,undefined,true,true);kh_log.debug?.(T9`router:${this.#server_context_.get_method2(req)}) -> request for ${list_marker} | ${req.originalUrl} | -> send ${filename}`);this.#h4EF_.readFile(filename,false,true).then(content=>{kh_log.debug?.(T9`received ${list_marker} [ ${content} ]`);const jo=isString(content)?JSON.parse(content):content;if(Array.isArray(jo.entries))jo.entries=jo.entries.filter(entry=>!isEmpty(entry));return res.json(jo)}).catch(error=>{error.log=msg2send=>kh_log.error?.(T9`router:${this.#server_context_.get_method2(req)}) / ${currentFunctionName()} -> error= ${msg2send.error||msg2send}`);error._status=404;return next(error)})}handle_post_teamlist(req,res,next){const list_marker=/\/~data\/(.*)$/.exec(req.originalUrl)?.[1];const filename=this.#h4EF_.stdFileNameAuto(list_marker,undefined,true,true);let data=req.body??{};if(Array.isArray(data.entries)){data.entries=data.entries.filter(entry=>!isEmpty(entry)).sort((a,b)=>a.toLocaleLowerCase("de-DE").localeCompare(b.toLocaleLowerCase("de-DE"),"de-DE"))}delete data["auto_save"];delete data.broadcast;kh_log.debug?.(T9`router:${this.#server_context_.get_method2(req)}) -> request to write ${list_marker} | ${req.originalUrl} | -> write ${filename}`);this.#h4EF_.writeFile(filename,data,false).then(rslt=>{kh_log.debug?.(T9`${rslt}`);return res.json({result:"OK",status:res.statusCode||201,_links:{self:T9`${this.#server_context_.getOwnURL(req)}${req.originalUrl}`}})}).catch(error=>{error.log=msg2send=>kh_log.error?.(T9`router:${this.#server_context_.get_method2(req)}) / ${currentFunctionName()} -> error= ${msg2send.error||msg2send}`);error._status=405;return next(error)})}handle_docfile(req,res,next){kh_log.debug?.(`router:${this.#server_context_.get_method2(req)}) -> request= ${req.originalUrl}, sessionID= ${this.#server_context_.sessionID(req)}`);const sD=cs.sessionData.get(req);const post_fix="writer"==sD.userRole?"":" (Anwender)";res.sendFile(`${process.cwd()}/doc/Beschreibung der Internetapplikation${post_fix}.pdf`)}}kh_end_remove();kh_global.LoadedScripts.get(mf).resolve(ms);